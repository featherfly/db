
package cn.featherfly.common.db.wrapper;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;

import cn.featherfly.common.db.JdbcException;

/**
 * <p>
 * java.sql.Statement的包装类，包装所有检查异常（SQLEception）为非检查异常（JdbcException）
 * </p>
 *
 * @author zhongj
 */
public class StatementWrapper implements AutoCloseable {

    private Statement statement;

    private ConnectionWrapper connectionWrapper;

    public StatementWrapper(Statement statement, ConnectionWrapper connectionWrapper) {
        this.statement = statement;
        this.connectionWrapper = connectionWrapper;
    }

    /**
     * @see java.sql.Statement#addBatch(String)
     */
    public void addBatch(String sql) {
        try {
            statement.addBatch(sql);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement#cancel()
     */
    public void cancel() {
        try {
            statement.cancel();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement#clearBatch()
     */
    public void clearBatch() {
        try {
            statement.clearBatch();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement#clearWarnings()
     */
    public void clearWarnings() {
        try {
            statement.clearWarnings();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement#close()
     */
    @Override
    public void close() {
        try {
            statement.close();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean execute(String sql) {
        try {
            return statement.execute(sql);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean execute(String sql, int autoGeneratedKeys) {
        try {
            return statement.execute(sql, autoGeneratedKeys);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean execute(String sql, int[] columnIndexes) {
        try {
            return statement.execute(sql, columnIndexes);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean execute(String sql, String[] columnNames) {
        try {
            return statement.execute(sql, columnNames);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int[] executeBatch() {
        try {
            return statement.executeBatch();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public ResultSet executeQuery(String sql) {
        try {
            return statement.executeQuery(sql);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int executeUpdate(String sql) {
        try {
            return statement.executeUpdate(sql);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int executeUpdate(String sql, int autoGeneratedKeys) {
        try {
            return statement.executeUpdate(sql, autoGeneratedKeys);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int executeUpdate(String sql, int[] columnIndexes) {
        try {
            return statement.executeUpdate(sql, columnIndexes);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int executeUpdate(String sql, String[] columnNames) {
        try {
            return statement.executeUpdate(sql, columnNames);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public ConnectionWrapper getConnection() {
        return connectionWrapper;
    }

    /**
     * @see java.sql.Statement
     */
    public int getFetchDirection() {
        try {
            return statement.getFetchDirection();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getFetchSize() {
        try {
            return statement.getFetchSize();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public ResultSet getGeneratedKeys() {
        try {
            return statement.getGeneratedKeys();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getMaxFieldSize() {
        try {
            return statement.getMaxFieldSize();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getMaxRows() {
        try {
            return statement.getMaxRows();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean getMoreResults() {
        try {
            return statement.getMoreResults();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean getMoreResults(int current) {
        try {
            return statement.getMoreResults(current);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getQueryTimeout() {
        try {
            return statement.getQueryTimeout();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public ResultSet getResultSet() {
        try {
            return statement.getResultSet();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getResultSetConcurrency() {
        try {
            return statement.getResultSetConcurrency();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getResultSetHoldability() {
        try {
            return statement.getResultSetHoldability();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getResultSetType() {
        try {
            return statement.getResultSetType();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public int getUpdateCount() {
        try {
            return statement.getUpdateCount();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public SQLWarning getWarnings() {
        try {
            return statement.getWarnings();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean isClosed() {
        try {
            return statement.isClosed();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean isPoolable() {
        try {
            return statement.isPoolable();
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setCursorName(String name) {
        try {
            statement.setCursorName(name);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setEscapeProcessing(boolean enable) {
        try {
            statement.setEscapeProcessing(enable);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setFetchDirection(int direction) {
        try {
            statement.setFetchDirection(direction);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setFetchSize(int rows) {
        try {
            statement.setFetchSize(rows);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setMaxFieldSize(int max) {
        try {
            statement.setMaxFieldSize(max);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setMaxRows(int max) {
        try {
            statement.setMaxRows(max);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setPoolable(boolean poolable) {
        try {
            statement.setPoolable(poolable);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public void setQueryTimeout(int seconds) {
        try {
            statement.setQueryTimeout(seconds);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public boolean isWrapperFor(Class<?> iface) {
        try {
            return statement.isWrapperFor(iface);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @see java.sql.Statement
     */
    public <T> T unwrap(Class<T> iface) {
        try {
            return statement.unwrap(iface);
        } catch (SQLException e) {
            throw new JdbcException(e);
        }
    }

    /**
     * @return 返回statement（java.sql.Statement）
     */
    public Statement getStatement() {
        return statement;
    }
}
